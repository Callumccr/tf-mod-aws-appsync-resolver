#**
The 'params' key accepts any valid Elasticsearch DSL expression.
You must replace the <index>, <type>, and <field> placeholders with actual values.
*#
#set( $query = {} )
#if( $ctx.args.filter )
	$util.qr($query.put("bool", {}))
	#if( $ctx.args.filter.fleetId || $ctx.args.filter.licence )
    	$util.qr($query.bool.put("must", []))

		#if( $ctx.args.filter.fleetId )
        	$util.qr($query.bool.must.add({
            	"match": {
                	"fleetId": "$ctx.args.filter.fleetId"
                }
            }))
        #end

        #if( $ctx.args.filter.licence )
        	$util.qr($query.bool.must.add({
            	"match": {
                	"licence": "$ctx.args.filter.licence"
                }
            }))
        #end
    #end

    #if( $ctx.args.filter.zoneStartTimestamp )
    	$util.qr($query.bool.put("filter", {
            "range": {
                "zoneStartTimestamp": {}
            }
        }))
        #if( $ctx.args.filter.zoneStartTimestamp.start )
        	$util.qr($query.bool.filter.range.zoneStartTimestamp.put("gte", $ctx.args.filter.zoneStartTimestamp.start))
        #end

        #if( $ctx.args.filter.zoneStartTimestamp.end )
        	$util.qr($query.bool.filter.range.zoneStartTimestamp.put("lte", $ctx.args.filter.zoneStartTimestamp.end))
        #end
    #end
#else
	$util.qr($query.put("match_all", {}))
#end

{
    "version":"2017-02-28",
    "operation":"GET",
    "path":"/scorezone/_search",
    "params": {
    	"headers": {},
        "queryString": {},
    	"body": {
        	"from": $util.defaultIfNull($context.args.from, 0),
			"size": $util.defaultIfNull($context.args.size, 100),
            "query": $util.toJson($query),
            "sort": {
            	"zoneStartTimestamp": "desc"
            }
        }
    }
}
